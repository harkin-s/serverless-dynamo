service:
  name: serverless-dynamo

custom:
  dynamodb:
    stages:
      - dev

plugins:
  - serverless-offline
  - serverless-dynamodb-local

provider:
  name: aws
  runtime: nodejs12.x
  region: eu-west-1
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      # Restrict our IAM role permissions to
      # the specific table for the stage
      Resource:
        - "Fn::GetAtt": [ tasksTable, Arn ]

resources:
  Resources:
    tasksTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: tasks
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
          - AttributeName: creator
            AttributeType: S
        KeySchema:
          - AttributeName: creator
            KeyType: HASH
          - AttributeName: id
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1

functions:
  list-tasks:
    handler: build/list-tasks.list
    events:
      - http:
          method: get
          path: list
  add-task:
    handler: build/add-task.add
    events:
      - http:
          method: put
          path: add
  remove-task:
    handler: build/remove-task.remove
    events:
      - http:
          method: delete
          path: remove
