service: serverless-dynamo

custom:
  dynamodb:
    stages:
      - dev

plugins:
  - serverless-offline
  - serverless-dynamodb-local

provider:
  name: aws
  runtime: nodejs12.x
  region: eu-west-1
  stage: ${opt:stage, 'dev'}
  iamRoleStatements:
  cors: true
    - Effect: Allow
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource:
        - "Fn::GetAtt": [tasksTable, Arn ]

resources:
  Resources:
    tasksTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${opt:stage}-tasks
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
          - AttributeName: creator
            AttributeType: S
        KeySchema:
          - AttributeName: creator
            KeyType: HASH
          - AttributeName: id
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1

functions:
  list-tasks:
    handler: build/list-tasks.list
    memorySize: 128
    environment:
      NODE_ENV: ${opt:stage}
    events:
      - http:
          method: get
          path: list
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
            allowCredentials: false
  add-task:
    handler: build/add-task.add
    memorySize: 128
    environment:
      NODE_ENV: ${opt:stage}
    events:
      - http:
          method: put
          path: add
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
            allowCredentials: false
  remove-task:
    handler: build/remove-task.remove
    memorySize: 128
    environment:
      NODE_ENV: ${opt:stage}
    events:
      - http:
          method: delete
          path: remove
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
            allowCredentials: false
